name: "Arweave MacOS Builder"
on:
  workflow_dispatch:
  push:
    branches: ["**"]

# We don't have a lot of workers right now, and some of the tests
# will run on the same server. To avoid failure only one test at
# a time is allowed.
concurrency:
  group: macos
  cancel-in-progress: false

jobs:
  build:
    runs-on: [self-hosted, macOS, ARM64, build-runner]
    steps:
      # we don't have a clean environment on MacOS (no vm, no containers)
      # we need to clean everything up before executing the workflow
      - name: cleanup
        if: always()
        run: |
          rm -rf "${GITHUB_WORKSPACE}" && mkdir -p "${GITHUB_WORKSPACE}"

      # let checkout arweave
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
          
      - name: Get dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./ar-rebar3 default get-deps

      - name: Get dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./ar-rebar3 test get-deps

      - name: Compile arweave release
        run: ./ar-rebar3 default release

      - name: Build arweave test sources
        run: ./ar-rebar3 test compile
        
     # some artifacts are compiled and only available
      # in arweave directy (libraries)
      - name: Prepare artifacts
        run: |
          chmod -R u+w ./_build
          tar czfLp _build.tar.gz ./_build
          tar czfLp apps.tar.gz ./apps

      # to avoid reusing artifacts from someone else
      # and generating issues, an unique artifact is
      # produced using github checksum.
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-${{ github.sha }}
          if-no-files-found: error
          retention-days: 1
          overwrite: true
          path: |
            _build.tar.gz
            apps.tar.gz

  canary:
    needs: build
    runs-on: [self-hosted, macOS, ARM64, build-runner]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-build-${{ github.sha }}

      - name: Extract artifact
        run: |
          tar zxfp _build.tar.gz
          tar zxfp apps.tar.gz

      - id: canary
        name: ar_canary.erl
        continue-on-error: true
        run: bash scripts/github_workflow.sh "tests" "ar_canary"

  tests:
    needs: canary
    runs-on: [self-hosted, macOS, ARM64, build-runner]
    strategy:
      max-parallel: 3
      matrix:
        core_test_mod: [
            ar_vdf_server_tests,
            ar_mine_vdf_tests,
            ar_vdf_tests
          ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-build-${{ github.sha }}

      - name: Extract artifact
        run: |
          tar zxfp _build.tar.gz
          tar zxfp apps.tar.gz

      - name: ${{ matrix.core_test_mod }}.erl
        id: test
        run: bash scripts/github_workflow.sh "tests" "${{ matrix.core_test_mod }}"

      - name: upload artifacts in case of failure
        uses: actions/upload-artifact@v4
        if: always() && failure()
        with:
          name: "logs-${{ matrix.core_test_mod }}-${{ github.run_attempt }}-${{ job.status }}-${{ runner.name }}-${{ github.sha }}"
          retention-days: 7
          overwrite: true
          include-hidden-files: true
          path: |
            ./logs
            *.out
            *.dump
