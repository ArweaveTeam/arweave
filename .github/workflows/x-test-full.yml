######################################################################
# Full Arweave Test Suite. Mostly used on Linux like systems.
######################################################################
name: "arweave-test-suite-full"

on:
  workflow_call:
    inputs:
      os_arch:
        description: "operating system architecture"
        default: "amd64"
        type: "string"
      os_name:
        description: "operating system name"
        default: "ubuntu"
        type: "string"
      os_release:
        description: "operating system release"
        default: "22.04"
        type: "string"

env:
  cache_key: ${{ inputs.os_arch }}-${{ inputs.os_name }}-${{ inputs.os_release }}

####################################################################
# Test modules (note: that _tests are implicitly run by a matching
# prefix name
####################################################################
jobs:
  eunit-tests-suite:
    runs-on:
      - self-hosted
      - build-runner
      - ${{ inputs.os_arch }}
      - ${{ inputs.os_name }}
      - ${{ inputs.os_release }}

    strategy:
      max-parallel: 12
      matrix:
        core_test_mod: [
            # modules
            ar,
            ar_block,
            ar_block_cache,
            ar_chain_stats,
            ar_chunk_copy,
            ar_chunk_storage,
            ar_data_sync_worker_master,
            ar_deep_hash,
            ar_device_lock,
            ar_diff_dag,
            ar_entropy_gen,
            ar_entropy_storage,
            ar_ets_intervals,
            ar_events,
            ar_footprint_record,
            ar_inflation,
            ar_intervals,
            ar_join,
            ar_kv,
            ar_merkle,
            ar_mining_cache,
            ar_mining_server,
            ar_mining_stats,
            ar_node,
            ar_node_utils,
            ar_nonce_limiter,
            # ar_p3,
            # ar_p3_config,
            # ar_p3_db,
            ar_packing_server,
            ar_patricia_tree,
            ar_peers,
            ar_peer_intervals,
            ar_pricing,
            ar_repack,
            ar_repack_fsm,
            ar_replica_2_9,
            ar_replica_2_9_entropy_cache,
            ar_retarget,
            ar_serialize,
            ar_storage_module,
            ar_storage,
            ar_sync_buckets,
            ar_sync_record,
            ar_tx_db,
            ar_unbalanced_merkle,
            ar_util,
            ar_verify_chunks,
            ar_wallet,
            ar_webhook,
            ar_pool,
            # standard
            ar_base64_compatibility_tests,
            ar_config_tests,
            ar_difficulty_tests,
            ar_header_sync_tests,
            ar_http_iface_tests,
            ar_http_util_tests,
            ar_info_tests,
            ar_mempool_tests,
            ar_mine_randomx_tests,
            ar_mine_vdf_tests,
            ar_mining_io_tests,
            ar_mining_worker_tests,
            ar_poller_tests,
            ar_replica_2_9_nif_tests,
            ar_semaphore_tests,
            ar_start_from_block_tests,
            ar_tx_blacklist_tests,
            ar_tx_replay_pool_tests,
            ar_vdf_tests,
            # long running
            ar_coordinated_mining_tests,
            ar_data_roots_sync_tests,
            ar_data_sync_records_footprints_test,
            ar_data_sync_recovers_from_corruption_test,
            ar_data_sync_syncs_data_test,
            ar_data_sync_syncs_after_joining_test,
            ar_data_sync_mines_off_only_last_chunks_test,
            ar_data_sync_mines_off_only_second_last_chunks_test,
            ar_data_sync_disk_pool_rotation_test,
            ar_data_sync_enqueue_intervals_test,
            ar_fork_recovery_tests,
            ar_tx,
            ar_packing_tests,
            ar_poa,
            ar_vdf_block_validation_tests,
            ar_vdf_server_tests,
            ar_vdf_external_update_tests,
            ar_post_block_tests,
            ar_reject_chunks_tests
          ]
    steps:
      - name: cleanup
        if: always()
        run: |
          rm -rf "${GITHUB_WORKSPACE}" && mkdir -p "${GITHUB_WORKSPACE}"

      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}-${{ env.cache_key }}

      # Both artifacts (_build and apps dir) are
      # required.
      - name: Extract artifact
        run: |
          tar zxfp _build.tar.gz
          tar zxfp apps.tar.gz

      - name: ${{ matrix.core_test_mod }}.erl
        id: tests
        run: bash scripts/github_workflow.sh "tests" "${{ matrix.core_test_mod }}"

      # this part of the job produces test artifacts from logs
      # generated by the tests. It also collect dumps and the files
      # present in .tmp (temporary arweave data store)
      - name: upload artifacts in case of failure
        uses: actions/upload-artifact@v4
        if: always() && failure()
        with:
          name: "logs-${{ matrix.core_test_mod }}-${{ github.run_attempt }}-${{ job.status }}-${{ runner.name }}-${{ github.sha }}"
          retention-days: 7
          overwrite: true
          include-hidden-files: true
          path: |
            ./logs
            *.out
            *.dump
