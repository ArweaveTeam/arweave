######################################################################
# Full Arweave Test Suite. On demand.
######################################################################
name: "arweave-test-suite-full"

on:
  workflow_call:
    inputs:
      test:
        type: "string"
        required: true
      os_arch:
        description: "operating system architecture"
        default: "amd64"
        type: "string"
      os_name:
        description: "operating system name"
        default: "ubuntu"
        type: "string"
      os_release:
        description: "operating system release"
        default: "22.04"
        type: "string"

env:
  cache_key: ${{ inputs.os_arch }}-${{ inputs.os_name }}-${{ inputs.os_release }}

####################################################################
# Test modules (note: that _tests are implicitly run by a matching
# prefix name
####################################################################
jobs:
  eunit-tests-suite:
    runs-on:
      - self-hosted
      - build-runner
      - ${{ inputs.os_arch }}
      - ${{ inputs.os_name }}
      - ${{ inputs.os_release }}

    steps:
      - name: cleanup
        if: always()
        run: |
          rm -rf "${GITHUB_WORKSPACE}" && mkdir -p "${GITHUB_WORKSPACE}"

      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}-${{ env.cache_key }}

      # Both artifacts (_build and apps dir) are
      # required.
      - name: Extract artifact
        run: |
          tar zxfp _build.tar.gz
          tar zxfp apps.tar.gz

      - name: ${{ inputs.test }}.erl
        id: tests
        run: bash scripts/github_workflow.sh "tests" "${{ inputs.test }}"

      # this part of the job produces test artifacts from logs
      # generated by the tests. It also collect dumps and the files
      # present in .tmp (temporary arweave data store)
      - name: upload artifacts in case of failure
        uses: actions/upload-artifact@v4
        if: always() && failure()
        with:
          name: "logs-${{ inputs.test }}-${{ github.run_attempt }}-${{ job.status }}-${{ runner.name }}-${{ github.sha }}"
          retention-days: 7
          overwrite: true
          include-hidden-files: true
          path: |
            ./logs
            *.out
            *.dump
